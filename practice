
'''string methods'''
#UPPER-used to convert the string lower into upper formate
a='abi\nesh'
print(a.upper(),1)

#LOWER-used to convert the string upper into lower formate
a1="ABINESH"
print(a1.lower())

#CASEFOLD -similair as lower but its effective compare to lower
print(a1.casefold())

#CAPITALIZE-to convert the first letter of string in capital
print(a.capitalize())

#CENTER-used to center the string 
'''center(length,character),length-it refers the space of string and character refers as what char should be assign for empty spaces(mention in string format'''
print(a1.center(25,'-'))

#COUNT-Return the number of times the value appears in the string
'''other type of format is to mentioning (substr,start,end)-it means to return values from in this range of index position '''
a2="i am python student and i attending a python class everyday"
print(a2.count("python"))
print(a2.count("i",0,20)) #in the range the i occurs one time between 0-20

#ENCODE -used to convert into bytes for machine understanding
a3="my name is Ã¢binesh"
print(a3.encode()) #encode to normal
print(a3.encode(encoding='ascii',errors='ignore')) #encode and ignore the non ascii
print(a3.encode(encoding='ascii',errors='backslashreplace')) #encode and replace the backslash in errors
print(a3.encode(encoding='ascii',errors='replace')) #encode and replace the eroors
print(a3.encode(encoding='ascii',errors='namereplace'))#encode and replace the error in name of specified character 
print(a3.encode(encoding='ascii',errors='xmlcharrefreplace'))#replace the error in xmlchar

#ENDSWITH-to check the values is endwith that parameter is it correct them true otherwise false
print(a.endswith("h"))
print(a.endswith("a"))
print(a.endswith("h",0,8))

#EXPANDTABS -expand the string based on parameter 
a5="h\te\tl\tl\to"
print(a5.expandtabs(2))

#FIND-find the position of character in string if its not it gives -1
print(a.find("i"))
print(a.find("i",0,2))

#RFIND-method finds the last occurrence of the specified value.
a6="indian"
print(a6.rfind("i"))

#FORMAT-The format() method formats the specified value(s) and insert them inside the string's placeholder.
'''name=input()
native=input()

a=f"i am {name} and i am from {native}"
print(a)'''
txt2 = "My name is {0}, I'm {1}".format("John",36)
print(txt2)

#FORMAT_MAP- method formats the specified values of a dictionary and insert them inside the string's placeholders.
myvar = {"Name" : "Jane", "Age" : 36}
txt = "Happy Birthday {Name} You Are Now On Level {Age}!"
print(txt.format_map(myvar))

#INDEX-find the position of str is start
a7="name","abinesh"
print(a7.index("abinesh"))

#RINDEX-method finds the last occurrence of the specified value.
print(txt.rindex("y",0,17))

#ISALNUM-method returns True if all the characters are alphanumeric
b="abinesh123"
print(b.isalnum())
b1="abinesh"
print(b.isalnum())

#ISALPHA-Check if all the characters in the text is alphabetic:
print(b.isalpha())

#ISASCII-Returns True if all characters in the string are ascii characters
print(b.isascii())

#ISDECIMAL-Returns True if all characters in the string are decimals
b2="1234"
print(b2.isdecimal())

#ISDIGIT-Returns True if all characters in the string are digits
print(b2.isdigit())

#ISIDENTIFIER-is used to validate the identifier(alphanumeric and underscore)
print(b2.isidentifier())
b3="my_name"
print(b3.isidentifier())

#ISLOWER-validate the string is lower,its lower gives true
print(b3.islower())

#ISNUMERIC-check the value is numeric or not
print(b2.isnumeric())
print(b3.isnumeric())

#ISPRINTABLE-check the value is printable or not(if it contain control statement(\) gives false
print(b3.isprintable())
print(a.isprintable())

#ISSPACE-check if the value is space or not
c=" "
c1="\n"
print(c1.isspace())

#ISTITLE- method returns True if all words in a text start with a upper case letter, AND the rest of the word are lower case letters, otherwise False.
print(txt.istitle())

#JOIN -join the one or more element in string
print("*".join(a7))

#LJUST-The ljust() method will left align the string, using a specified character (space is default) as the fill character.
c2="abinesh"
c3=c2.ljust(5)
print(c3,"from thanjavur")

#RJUST- method will right align the string, using a specified character (space is default) as the fill character.
c3=c2.rjust(10)
print(c3,"from thanjavur")

#STRIP->used to remove the empty spaces and remove both left and right space
#the strip is 2type =lstrip(remove left space),rstrip(to remove right space)
a9='            # abinesh                       '
print(a9.strip())

#RSTRIP
txt3 = "     banana     "
x = txt.rstrip()
print("of all fruits", x, "is my favorite")


#PARTITION() method searches for a specified string, and splits the string into a tuple containing three elements.
print(a3.partition("name"))

#RPARTITION-method searches for the last occurrence of a specified string, and splits the string into a tuple containing three elements.
print(a3.rpartition("i"))

#REPLACE-method replaces a specified phrase with another specified phrase. count refers for how many word you want to change
print(a.replace("abi\nesh","abinesh"))
r=" my things is my things that is my things"
print(r.replace("things","name",3))

#RSPLIT-method splits a string into a list, starting from the right.
print(txt.rsplit())

#SPLIT
print(txt.split())

#SPLITLINES-method splits a string into a list. The splitting is done at line breaks.
print(a.split())

#STARTSWITH-check the string start with this statement
print(txt2.startswith("My"))

#SWAPCASE-return all upper to lower,lower to upper by each case
s="i am ABINESH"
print(s.swapcase())

#TITLE- method returns a string where the first character in every word is upper case. Like a header, or a title.
print(s.title())

#ZFILL-The zfill() method adds zeros (0) at the beginning of the string, until it reaches the specified length.
print(s.zfill(20))

